#include <iostream>
#include <cstring>
#include <climits>
#include <vector>

using namespace std;

int n, st, a[14][14];
bool visited[14];
vector<pair<int, int>> v;

void Prim (int u) {
    int x, y, dH = 0, sc = 0;
    visited[u] = true;
    while (sc < n - 1) {
        int min = INT_MAX;
        x = 1; 
        y = 1;
        for (int i = 1; i <= n; i++) {
            if (visited[i]) {
                for (int j = 1; j <= n; j++) {
                    if (!visited[j] && a[i][j] != 0) {
                        if (min > a[i][j]) {
                            min = a[i][j];
                            x = i;
                            y = j;
                        }
                    }
                }
            }
        }
        v.push_back({x, y});
        dH += min;
        visited[y] = true;
        sc++;
    }
    if (sc != n - 1 || dH <= 0) {
        cout << "No spanning tree";
    } else {
        cout << "dH = " << dH << endl;
        for (auto it : v) {
            if (it.first < it.second) {
                cout << it.first << ' ' << it.second << endl;
            } else {
                cout << it.second << ' ' << it.first << endl;
            }
        }
    }
}


int main() {
    cin >> n >> st;
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= n; j++) {
            cin >> a[i][j];
        }
    }
    memset(visited, false, sizeof(visited));
    Prim(st);
    return 0;
}
